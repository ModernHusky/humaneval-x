{"task_id": "Alice", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nlong long computeFactorial(int number) {\n    long long result = 1;\n    if (number < 0) return -1;\n    for (int i = 1; i <= number; ++i) {\n        result *= i;\n    }\n    return result;\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u9636\u4e58\u51fd\u6570\n    if (computeFactorial(5) != 120 || computeFactorial(0) != 1) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u7f16\u5199\u4e00\u4e2a C++ \u51fd\u6570\u8ba1\u7b97\u4e00\u4e2a\u6570\u7684\u9636\u4e58\u3002", "generation": "long long computeFactorial(int number) {\n    long long result = 1;\n    if (number < 0) return -1;\n    for (int i = 1; i <= number; ++i) {\n        result *= i;\n    }\n    return result;\n}", "result": "passed", "passed": true, "finish": -1, "file": "", "output": []}
{"task_id": "Bob", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nbool checkPalindrome(const string& str) {\n    string cleaned;\n    for (char c : str) cleaned += c;\n    for (size_t i = 0; i < cleaned.size() / 2; ++i) {\n        if (cleaned[i] != cleaned[cleaned.size() - 1 - i]) return false;\n    }\n    return true;\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u56de\u6587\u68c0\u67e5\n    if (!checkPalindrome(\"radar\") || !checkPalindrome(\"level\") || checkPalindrome(\"hello\")) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u521b\u5efa\u4e00\u4e2a C++ \u51fd\u6570\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u3002", "generation": "bool checkPalindrome(const string& str) {\n    string cleaned;\n    for (char c : str) cleaned += c;\n    for (size_t i = 0; i < cleaned.size() / 2; ++i) {\n        if (cleaned[i] != cleaned[cleaned.size() - 1 - i]) return false;\n    }\n    return true;\n}", "result": "failed: compilation error: test.cpp:7:28: error: 'string' does not name a type; did you mean 'stdin'?\n    7 | bool checkPalindrome(const string& str) {\n      |                            ^~~~~~\n      |                            stdin\ntest.cpp: In function 'bool checkPalindrome(const int&)':\ntest.cpp:8:5: error: 'string' was not declared in this scope; did you mean 'std::string'?\n    8 |     string cleaned;\n      |     ^~~~~~\n      |     std::string\nIn file included from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/iosfwd:41,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/ios:40,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/ostream:40,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/iostream:41,\n                 from test.cpp:1:\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/stringfwd.h:77:33: note: 'std::string' declared here\n   77 |   typedef basic_string<char>    string;\n      |                                 ^~~~~~\ntest.cpp:9:19: error: 'begin' was not declared in this scope; did you mean 'std::begin'?\n    9 |     for (char c : str) cleaned += c;\n      |                   ^~~\n      |                   std::begin\nIn file included from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/string:53,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/locale_classes.h:40,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/ios_base.h:41,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/ios:44:\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/range_access.h:95:5: note: 'std::begin' declared here\n   95 |     begin(_Tp (&__arr)[_Nm]) noexcept\n      |     ^~~~~\ntest.cpp:9:19: error: 'end' was not declared in this scope; did you mean 'std::end'?\n    9 |     for (char c : str) cleaned += c;\n      |                   ^~~\n      |                   std::end\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/range_access.h:106:5: note: 'std::end' declared here\n  106 |     end(_Tp (&__arr)[_Nm]) noexcept\n      |     ^~~\ntest.cpp:9:24: error: 'cleaned' was not declared in this scope\n    9 |     for (char c : str) cleaned += c;\n      |                        ^~~~~~~\ntest.cpp:10:28: error: 'cleaned' was not declared in this scope\n   10 |     for (size_t i = 0; i < cleaned.size() / 2; ++i) {\n      |                            ^~~~~~~\ntest.cpp: In function 'int main()':\ntest.cpp:19:26: error: invalid conversion from 'const char*' to 'int' [-fpermissive]\n   19 |     if (!checkPalindrome(\"radar\") || !checkPalindrome(\"level\") || checkPalindrome(\"hello\")) {\n      |                          ^~~~~~~\n      |                          |\n      |                          const char*\ntest.cpp:7:36: note:   initializing argument 1 of 'bool checkPalindrome(const int&)'\n    7 | bool checkPalindrome(const string& str) {\n      |                      ~~~~~~~~~~~~~~^~~\ntest.cpp:19:55: error: invalid conversion from 'const char*' to 'int' [-fpermissive]\n   19 |     if (!checkPalindrome(\"radar\") || !checkPalindrome(\"level\") || checkPalindrome(\"hello\")) {\n      |                                                       ^~~~~~~\n      |                                                       |\n      |                                                       const char*\ntest.cpp:7:36: note:   initializing argument 1 of 'bool checkPalindrome(const int&)'\n    7 | bool checkPalindrome(const string& str) {\n      |                      ~~~~~~~~~~~~~~^~~\ntest.cpp:19:83: error: invalid conversion from 'const char*' to 'int' [-fpermissive]\n   19 |     if (!checkPalindrome(\"radar\") || !checkPalindrome(\"level\") || checkPalindrome(\"hello\")) {\n      |                                                                                   ^~~~~~~\n      |                                                                                   |\n      |                                                                                   const char*\ntest.cpp:7:36: note:   initializing argument 1 of 'bool checkPalindrome(const int&)'\n    7 | bool checkPalindrome(const string& str) {\n      |                      ~~~~~~~~~~~~~~^~~\n", "passed": false, "finish": -1, "file": "", "output": []}
{"task_id": "Charlie", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nint getMaxElement(int* array, int length) {\n    int largest = INT_MIN;\n    for (int i = 0; i < length; ++i) {\n        largest = max(largest, array[i]);\n    }\n    return largest;\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u67e5\u627e\u6700\u5927\u5143\u7d20\n    int arr[] = {3, 1, 4, 1, 5, 9, 2, 6};\n    if (getMaxElement(arr, 8) != 9) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u7f16\u5199\u4e00\u4e2a C++ \u51fd\u6570\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u5143\u7d20\u3002", "generation": "int getMaxElement(int* array, int length) {\n    int largest = INT_MIN;\n    for (int i = 0; i < length; ++i) {\n        largest = max(largest, array[i]);\n    }\n    return largest;\n}", "result": "failed: compilation error: test.cpp: In function 'int getMaxElement(int*, int)':\ntest.cpp:10:19: error: 'max' was not declared in this scope; did you mean 'std::max'?\n   10 |         largest = max(largest, array[i]);\n      |                   ^~~\n      |                   std::max\nIn file included from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/algorithm:61,\n                 from test.cpp:4:\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/stl_algo.h:5715:5: note: 'std::max' declared here\n 5715 |     max(initializer_list<_Tp> __l, _Compare __comp)\n      |     ^~~\n", "passed": false, "finish": -1, "file": "", "output": []}
{"task_id": "David", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nvoid invertVector(vector<int>& numbers) {\n    for (size_t i = 0; i < numbers.size() / 2; ++i) {\n        int temp = numbers[i];\n        numbers[i] = numbers[numbers.size() - 1 - i];\n        numbers[numbers.size() - 1 - i] = temp;\n    }\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u53cd\u8f6c\u5411\u91cf\n    std::vector<int> vec = {1, 2, 3, 4, 5};\n    invertVector(vec);\n    if (vec != std::vector<int>({5, 4, 3, 2, 1})) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u5b9e\u73b0\u4e00\u4e2a C++ \u51fd\u6570\u53cd\u8f6c\u6574\u6570\u5411\u91cf\u3002", "generation": "void invertVector(vector<int>& numbers) {\n    for (size_t i = 0; i < numbers.size() / 2; ++i) {\n        int temp = numbers[i];\n        numbers[i] = numbers[numbers.size() - 1 - i];\n        numbers[numbers.size() - 1 - i] = temp;\n    }\n}", "result": "failed: compilation error: test.cpp:7:6: error: variable or field 'invertVector' declared void\n    7 | void invertVector(vector<int>& numbers) {\n      |      ^~~~~~~~~~~~\ntest.cpp:7:19: error: 'vector' was not declared in this scope; did you mean 'std::vector'?\n    7 | void invertVector(vector<int>& numbers) {\n      |                   ^~~~~~\n      |                   std::vector\nIn file included from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/vector:66,\n                 from test.cpp:2:\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/stl_vector.h:428:11: note: 'std::vector' declared here\n  428 |     class vector : protected _Vector_base<_Tp, _Alloc>\n      |           ^~~~~~\ntest.cpp:7:26: error: expected primary-expression before 'int'\n    7 | void invertVector(vector<int>& numbers) {\n      |                          ^~~\ntest.cpp: In function 'int main()':\ntest.cpp:19:5: error: 'invertVector' was not declared in this scope\n   19 |     invertVector(vec);\n      |     ^~~~~~~~~~~~\n", "passed": false, "finish": -1, "file": "", "output": []}
{"task_id": "Emma", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nint digitSum(int value) {\n    int total = 0;\n    value = abs(value);\n    do {\n        total += value % 10;\n        value /= 10;\n    } while (value > 0);\n    return total;\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u6570\u5b57\u4e4b\u548c\n    if (digitSum(123) != 6 || digitSum(9999) != 36) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u7f16\u5199\u4e00\u4e2a C++ \u51fd\u6570\u8ba1\u7b97\u4e00\u4e2a\u6570\u7684\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u3002", "generation": "int digitSum(int value) {\n    int total = 0;\n    value = abs(value);\n    do {\n        total += value % 10;\n        value /= 10;\n    } while (value > 0);\n    return total;\n}", "result": "passed", "passed": true, "finish": -1, "file": "", "output": []}
{"task_id": "Frank", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nbool isNumberPrime(int num) {\n    if (num < 2) return false;\n    for (int divisor = 2; divisor <= sqrt(num); ++divisor) {\n        if (num % divisor == 0) return false;\n    }\n    return true;\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u7d20\u6570\u68c0\u67e5\n    if (!isNumberPrime(17) || !isNumberPrime(23) || isNumberPrime(4) || isNumberPrime(1)) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u521b\u5efa\u4e00\u4e2a C++ \u51fd\u6570\u68c0\u67e5\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u7d20\u6570\u3002", "generation": "bool isNumberPrime(int num) {\n    if (num < 2) return false;\n    for (int divisor = 2; divisor <= sqrt(num); ++divisor) {\n        if (num % divisor == 0) return false;\n    }\n    return true;\n}", "result": "passed", "passed": true, "finish": -1, "file": "", "output": []}
{"task_id": "Grace", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nlong long getFibonacci(int index) {\n    if (index < 0) return 0;\n    if (index <= 1) return index;\n    vector<long long> fib(index + 1);\n    fib[0] = 0; fib[1] = 1;\n    for (int i = 2; i <= index; ++i) {\n        fib[i] = fib[i - 1] + fib[i - 2];\n    }\n    return fib[index];\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u6590\u6ce2\u90a3\u5951\u6570\u5217\n    if (getFibonacci(0) != 0 || getFibonacci(1) != 1 || getFibonacci(5) != 5 || getFibonacci(10) != 55) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u7f16\u5199\u4e00\u4e2a C++ \u51fd\u6570\u8ba1\u7b97\u7b2c n \u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u3002", "generation": "long long getFibonacci(int index) {\n    if (index < 0) return 0;\n    if (index <= 1) return index;\n    vector<long long> fib(index + 1);\n    fib[0] = 0; fib[1] = 1;\n    for (int i = 2; i <= index; ++i) {\n        fib[i] = fib[i - 1] + fib[i - 2];\n    }\n    return fib[index];\n}", "result": "failed: compilation error: test.cpp: In function 'long long int getFibonacci(int)':\ntest.cpp:10:5: error: 'vector' was not declared in this scope; did you mean 'std::vector'?\n   10 |     vector<long long> fib(index + 1);\n      |     ^~~~~~\n      |     std::vector\nIn file included from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/vector:66,\n                 from test.cpp:2:\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/stl_vector.h:428:11: note: 'std::vector' declared here\n  428 |     class vector : protected _Vector_base<_Tp, _Alloc>\n      |           ^~~~~~\ntest.cpp:10:12: error: expected primary-expression before 'long'\n   10 |     vector<long long> fib(index + 1);\n      |            ^~~~\ntest.cpp:11:5: error: 'fib' was not declared in this scope\n   11 |     fib[0] = 0; fib[1] = 1;\n      |     ^~~\n", "passed": false, "finish": -1, "file": "", "output": []}
{"task_id": "Henry", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nint charFrequency(const string& text, char target) {\n    int occurrences = 0;\n    for (size_t i = 0; i < text.length(); ++i) {\n        if (text[i] == target) ++occurrences;\n    }\n    return occurrences;\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u5b57\u7b26\u8ba1\u6570\n    if (charFrequency(\"hello\", 'l') != 2 || charFrequency(\"world\", 'o') != 1 || charFrequency(\"test\", 'x') != 0) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u5b9e\u73b0\u4e00\u4e2a C++ \u51fd\u6570\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u67d0\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002", "generation": "int charFrequency(const string& text, char target) {\n    int occurrences = 0;\n    for (size_t i = 0; i < text.length(); ++i) {\n        if (text[i] == target) ++occurrences;\n    }\n    return occurrences;\n}", "result": "failed: compilation error: test.cpp:7:25: error: 'string' does not name a type; did you mean 'stdin'?\n    7 | int charFrequency(const string& text, char target) {\n      |                         ^~~~~~\n      |                         stdin\ntest.cpp: In function 'int charFrequency(const int&, char)':\ntest.cpp:9:33: error: request for member 'length' in 'text', which is of non-class type 'const int'\n    9 |     for (size_t i = 0; i < text.length(); ++i) {\n      |                                 ^~~~~~\ntest.cpp:10:17: error: invalid types 'const int[size_t {aka long long unsigned int}]' for array subscript\n   10 |         if (text[i] == target) ++occurrences;\n      |                 ^\ntest.cpp: In function 'int main()':\ntest.cpp:18:23: error: invalid conversion from 'const char*' to 'int' [-fpermissive]\n   18 |     if (charFrequency(\"hello\", 'l') != 2 || charFrequency(\"world\", 'o') != 1 || charFrequency(\"test\", 'x') != 0) {\n      |                       ^~~~~~~\n      |                       |\n      |                       const char*\ntest.cpp:7:33: note:   initializing argument 1 of 'int charFrequency(const int&, char)'\n    7 | int charFrequency(const string& text, char target) {\n      |                   ~~~~~~~~~~~~~~^~~~\ntest.cpp:18:59: error: invalid conversion from 'const char*' to 'int' [-fpermissive]\n   18 |     if (charFrequency(\"hello\", 'l') != 2 || charFrequency(\"world\", 'o') != 1 || charFrequency(\"test\", 'x') != 0) {\n      |                                                           ^~~~~~~\n      |                                                           |\n      |                                                           const char*\ntest.cpp:7:33: note:   initializing argument 1 of 'int charFrequency(const int&, char)'\n    7 | int charFrequency(const string& text, char target) {\n      |                   ~~~~~~~~~~~~~~^~~~\ntest.cpp:18:95: error: invalid conversion from 'const char*' to 'int' [-fpermissive]\n   18 |     if (charFrequency(\"hello\", 'l') != 2 || charFrequency(\"world\", 'o') != 1 || charFrequency(\"test\", 'x') != 0) {\n      |                                                                                               ^~~~~~\n      |                                                                                               |\n      |                                                                                               const char*\ntest.cpp:7:33: note:   initializing argument 1 of 'int charFrequency(const int&, char)'\n    7 | int charFrequency(const string& text, char target) {\n      |                   ~~~~~~~~~~~~~~^~~~\n", "passed": false, "finish": -1, "file": "", "output": []}
{"task_id": "Isabel", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nint findGCD(int x, int y) {\n    x = abs(x); y = abs(y);\n    if (y == 0) return x;\n    return findGCD(y, x % y);\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u6700\u5927\u516c\u7ea6\u6570\n    if (findGCD(48, 18) != 6 || findGCD(100, 25) != 25 || findGCD(7, 13) != 1) {\n        std::cerr << \"Test failed!\" << std::endl;\n        return 1;\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u7f16\u5199\u4e00\u4e2a C++ \u51fd\u6570\u8ba1\u7b97\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002", "generation": "int findGCD(int x, int y) {\n    x = abs(x); y = abs(y);\n    if (y == 0) return x;\n    return findGCD(y, x % y);\n}", "result": "passed", "passed": true, "finish": -1, "file": "", "output": []}
{"task_id": "Jack", "completion_id": 0, "test_code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nvoid selectionSort(int array[], int length) {\n    for (int i = 0; i < length - 1; ++i) {\n        int minIdx = i;\n        for (int j = i + 1; j < length; ++j) {\n            if (array[j] < array[minIdx]) minIdx = j;\n        }\n        if (minIdx != i) swap(array[i], array[minIdx]);\n    }\n}\n\n\nint main() {\n    // \u6d4b\u8bd5\u6392\u5e8f\n    int arr[] = {5, 3, 1, 4, 2};\n    selectionSort(arr, 5);\n    for (int i = 0; i < 4; i++) {\n        if (arr[i] > arr[i+1]) {\n            std::cerr << \"Test failed!\" << std::endl;\n            return 1;\n        }\n    }\n    std::cout << \"Test passed!\" << std::endl;\n    return 0;\n}", "prompt": "\u521b\u5efa\u4e00\u4e2a C++ \u51fd\u6570\u5c06\u6570\u7ec4\u6309\u5347\u5e8f\u6392\u5e8f\u3002", "generation": "void selectionSort(int array[], int length) {\n    for (int i = 0; i < length - 1; ++i) {\n        int minIdx = i;\n        for (int j = i + 1; j < length; ++j) {\n            if (array[j] < array[minIdx]) minIdx = j;\n        }\n        if (minIdx != i) swap(array[i], array[minIdx]);\n    }\n}", "result": "failed: compilation error: test.cpp: In function 'void selectionSort(int*, int)':\ntest.cpp:13:26: error: 'swap' was not declared in this scope\n   13 |         if (minIdx != i) swap(array[i], array[minIdx]);\n      |                          ^~~~\ntest.cpp:13:26: note: suggested alternatives:\nIn file included from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/vector:66,\n                 from test.cpp:2:\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/stl_vector.h:2122:5: note:   'std::swap'\n 2122 |     swap(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)\n      |     ^~~~\nIn file included from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/exception_ptr.h:41,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/exception:166,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/ios:41,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/ostream:40,\n                 from E:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/iostream:41,\n                 from test.cpp:1:\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/move.h:213:5: note:   'std::swap'\n  213 |     swap(_Tp& __a, _Tp& __b)\n      |     ^~~~\nE:/edgeDowload/mingw64/lib/gcc/x86_64-w64-mingw32/14.2.0/include/c++/bits/exception_ptr.h:230:5: note:   'std::__exception_ptr::swap'\n  230 |     swap(exception_ptr& __lhs, exception_ptr& __rhs)\n      |     ^~~~\n", "passed": false, "finish": -1, "file": "", "output": []}
